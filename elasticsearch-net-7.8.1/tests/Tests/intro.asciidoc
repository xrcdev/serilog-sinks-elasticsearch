:github: https://github.com/elastic/elasticsearch-net
:stackoverflow: http://stackoverflow.com

[[introduction]]
== Introduction

You've reached the documentation page for `Elasticsearch.Net` and `NEST`, The two official .NET clients for Elasticsearch. 

[float]
=== Why two clients?

`Elasticsearch.Net` is a very low level, dependency free, client that has no opinions about how you build and represent your requests and responses. It has abstracted 
enough so that **all** the Elasticsearch API endpoints are represented as methods but not too much to get in the way of how you want to build 
your json/request/response objects. It also comes with built in, configurable/overridable, cluster failover retry mechanisms. Elasticsearch is _elastic_ so why not your client?

`NEST` is a high level client that maps all requests and responses as types, and 
comes with a strongly typed query DSL that maps 1 to 1 with the Elasticsearch query DSL. It takes advantage of specific .NET 
features to provide higher level abstractions such as <<auto-map, auto mapping of CLR types>>. Internally, 
NEST uses and still exposes the low level `Elasticsearch.Net` client, providing access to the power of NEST and allowing
users to drop down to the low level client when wishing to.

Please read the getting started guide for both <<elasticsearch-net,Elasticsearch.Net>> and <<nest,NEST>>.

[float]
=== Questions, bugs, comments, feature requests

Bug reports and Feature requests are more than welcome on the {github}/issues[github issues pages]! 
We try to at least reply within the same day.

For more general questions and comments, we monitor questions tagged with {stackoverflow}/questions/tagged/nest[`nest`] and 
{stackoverflow}/questions/tagged/elasticsearch-net[`elasticsearch-net` on Stackoverflow], as well as 
discussions opened on our Discourse site, https://discuss.elastic.co/c/elasticsearch[discuss.elastic.co]. By mentioning 
`NEST` or `Elasticsearch.Net` in the title will help folks quickly identify what the question is about.
